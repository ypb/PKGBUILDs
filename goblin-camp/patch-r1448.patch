diff -r 97ac25b0e713 Goblin Camp/src/SpawningPool.cpp
--- a/Goblin Camp/src/SpawningPool.cpp	Thu Feb 17 14:39:47 2011 +0200
+++ b/Goblin Camp/src/SpawningPool.cpp	Mon Feb 28 00:01:59 2011 +0100
@@ -163,7 +163,7 @@
 					}
 				}
 
-				if (Random::Generate(std::min(expansion, unsigned int(10))) == 0) Expand();
+				if (Random::Generate(std::min(expansion, (unsigned int)10)) == 0) Expand();
 			}
 		}
 	}
diff -r 97ac25b0e713 Goblin Camp/src/data/Serialization.cpp
--- a/Goblin Camp/src/data/Serialization.cpp	Thu Feb 17 14:39:47 2011 +0200
+++ b/Goblin Camp/src/data/Serialization.cpp	Mon Feb 28 00:01:59 2011 +0100
@@ -224,7 +224,9 @@
 	ar.template register_type<Entity>();
 	ar.template register_type<SkillSet>();
 	ar & boost::serialization::base_object<Entity>(*this);
-	ar & NPC::NPCTypeToString(type);
+	std::string typeName;
+	typeName = NPC::NPCTypeToString(type);
+	ar & typeName;
 	ar & timeCount;
 	ar & jobs;
 	ar & taskIndex;
@@ -364,14 +366,18 @@
 void Item::save(Archive & ar, const unsigned int version) const {
 	ar & boost::serialization::base_object<Entity>(*this);
 	ar & graphic;
-	ar & Item::ItemTypeToString(type);
+	std::string typeName;
+	typeName = Item::ItemTypeToString(type);
+	ar & typeName;
 	ar & color.r;
 	ar & color.g;
 	ar & color.b;
 	int categoryCount = (int)categories.size();
 	ar & categoryCount;
+	std::string categoryName;
 	for (std::set<ItemCategory>::iterator cati = categories.begin(); cati != categories.end(); ++cati) {
-		ar & Item::ItemCategoryToString(*cati);
+		categoryName = Item::ItemCategoryToString(*cati);
+		ar & categoryName;
 	}
 	ar & flammable;
 	ar & attemptedStore;
@@ -450,7 +456,9 @@
 	ar & zone;
 	ar & reserved;
 	ar & name;
-	ar & Faction::FactionTypeToString(faction);
+	std::string factionName;
+	factionName = Faction::FactionTypeToString(faction);
+	ar & factionName;
 	ar & velocity;
 	ar & nextVelocityMove;
 	ar & velocityTarget;
@@ -742,7 +750,9 @@
 	ar & color.r;
 	ar & color.g;
 	ar & color.b;
-	ar & Construction::ConstructionTypeToString(type);
+	std::string typeName;
+	typeName = Construction::ConstructionTypeToString(type);
+	ar & typeName;
 	ar & walkable;
 	ar & materials;
 	ar & producer;
@@ -1309,7 +1319,9 @@
 	ar & color.g;
 	ar & color.b;
 	ar & graphic;
-	ar & Spell::SpellTypeToString(type);
+	std::string typeName;
+	typeName = Spell::SpellTypeToString(type);
+	ar & typeName;
 	ar & dead;
 	ar & attacks;
 	ar & immaterial;
